{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["TodoInfo","todo","className","title","UserInfo","user","href","email","name","TodoList","todos","map","classNames","completed","id","username","preparedTodos","userId","usersFromServer","find","color","App","useState","setTitle","userName","setUserName","setTodos","isTitle","setIsTitle","isUserName","setIsUserName","onSubmit","event","preventDefault","lengthTodos","length","addUser","newTodo","addTodo","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"oOAMaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,oBAAIC,UAAU,kBAAd,SACGD,EAAKE,SCHCC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mBAAGH,UAAU,WAAWI,KAAMD,EAAKE,MAAnC,SACGF,EAAKG,QCCCC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAV,GAAI,OACb,0BAEE,UAAQ,IACRC,UAAWU,IACT,WACA,CACE,sBAAuBX,EAAKY,YANlC,UAUE,cAAC,EAAD,CAAUZ,KAAMA,IACdA,EAAKI,MAAQ,cAAC,EAAD,CAAUA,KAAMJ,EAAKI,SAV/BJ,EAAKa,UCfL,G,MAAA,CACb,CACEA,GAAI,EACJN,KAAM,gBACNO,SAAU,OACVR,MAAO,qBAET,CACEO,GAAI,EACJN,KAAM,eACNO,SAAU,YACVR,MAAO,qBAET,CACEO,GAAI,EACJN,KAAM,mBACNO,SAAU,WACVR,MAAO,sBAET,CACEO,GAAI,EACJN,KAAM,mBACNO,SAAU,WACVR,MAAO,6BAET,CACEO,GAAI,EACJN,KAAM,mBACNO,SAAU,SACVR,MAAO,4BAET,CACEO,GAAI,EACJN,KAAM,uBACNO,SAAU,mBACVR,MAAO,2BAET,CACEO,GAAI,EACJN,KAAM,kBACNO,SAAU,eACVR,MAAO,0BAET,CACEO,GAAI,EACJN,KAAM,2BACNO,SAAU,gBACVR,MAAO,wBAET,CACEO,GAAI,EACJN,KAAM,kBACNO,SAAU,WACVR,MAAO,2BAET,CACEO,GAAI,GACJN,KAAM,qBACNO,SAAU,iBACVR,MAAO,4BCpDLS,ECPS,CACb,CACEF,GAAI,EACJX,MAAO,qBACPU,WAAW,EACXI,OAAQ,GAEV,CACEH,GAAI,GACJX,MAAO,qBACPU,WAAW,EACXI,OAAQ,GAEV,CACEH,GAAI,EACJX,MAAO,qCACPU,WAAW,EACXI,OAAQ,IDVkCN,KAAI,SAAAV,GAAI,kCACjDA,GADiD,IAEpDI,KAAMa,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKS,KAAOb,EAAKgB,WAAW,KAC/DG,MAAOnB,EAAKY,UAAY,QAAU,WAGvBQ,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOnB,EAAP,KAAcoB,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA0BH,mBAASN,GAAnC,mBAAON,EAAP,KAAcgB,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAmDA,OACE,sBAAK5B,UAAU,MAAf,UACE,+CAEA,uBAAM6B,SArBW,SAACC,GACpBA,EAAMC,iBAEDT,GACHM,GAAc,GAGX3B,GACHyB,GAAW,GAxCC,WACd,GAAIzB,GAASqB,EAAU,CACrB,IAAMU,EAAcxB,EAAMyB,OACpBC,EAAUlB,EAAgBC,MAC9B,SAAAd,GAAI,OAAImB,IAAanB,EAAKG,SACvB,KAEC6B,EAAU,CACdvB,GAAIJ,EAAMwB,EAAc,GAAGpB,GAAK,EAChCG,OAAQmB,EAAUA,EAAQtB,GAAK,EAC/BX,QACAU,WAAW,EACXR,KAAM+B,GAGRV,EAAS,GAAD,mBACHhB,GADG,CAEN2B,MA0BJC,GAEAf,EAAS,IACTE,EAAY,KAOV,UACE,sBAAKvB,UAAU,QAAf,UACE,uBACEqC,KAAK,OACLC,MAAOrC,EACPsC,SApCU,SAACT,GACnBT,EAASS,EAAMU,OAAOF,OACtBZ,GAAW,IAmCH,UAAQ,eAETD,GACC,sBAAMzB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACEsC,MAAOhB,EACPiB,SA1Ca,SAACT,GACtBP,EAAYO,EAAMU,OAAOF,OACzBV,GAAc,IAyCN,UAAQ,aAHV,UAKE,wBAAQU,MAAM,IAAd,2BAICtB,EAAgBP,KAAI,SAAAN,GAAI,OACvB,wBAEEmC,MAAOnC,EAAKG,KAFd,SAIGH,EAAKG,MAHDH,EAAKS,UAQfe,GACC,sBAAM3B,UAAU,QAAhB,qCAIJ,wBAAQqC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU7B,MAAOA,QEjHvBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a264b223.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={user.email}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <article\n          key={todo.id}\n          data-id=\"1\"\n          className={classNames(\n            'TodoInfo',\n            {\n              'TodoInfo--completed': todo.completed,\n            },\n          )}\n        >\n          <TodoInfo todo={todo} />\n          { todo.user && <UserInfo user={todo.user} /> }\n        </article>\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) || null,\n  color: todo.completed ? 'green' : 'red',\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [todos, setTodos] = useState(preparedTodos);\n  const [isTitle, setIsTitle] = useState(false);\n  const [isUserName, setIsUserName] = useState(false);\n\n  const addTodo = () => {\n    if (title && userName) {\n      const lengthTodos = todos.length;\n      const addUser = usersFromServer.find(\n        user => userName === user.name,\n      ) || null;\n\n      const newTodo = {\n        id: todos[lengthTodos - 1].id + 1,\n        userId: addUser ? addUser.id : 0,\n        title,\n        completed: false,\n        user: addUser,\n      };\n\n      setTodos([\n        ...todos,\n        newTodo,\n      ]);\n    }\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitle(false);\n  };\n\n  const handleUserName = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserName(event.target.value);\n    setIsUserName(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userName) {\n      setIsUserName(true);\n    }\n\n    if (!title) {\n      setIsTitle(true);\n    }\n\n    addTodo();\n\n    setTitle('');\n    setUserName('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            value={title}\n            onChange={handleTitle}\n            data-cy=\"titleInput\"\n          />\n          {isTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={userName}\n            onChange={handleUserName}\n            data-cy=\"userSelect\"\n          >\n            <option value=\"0\">\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserName && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}